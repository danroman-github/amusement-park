// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
	
	Движения.АктивныеПосещения.Записывать = Истина;
	Движения.Записать();
	
	АктивныеПосещения = АктивныеПосещения();
	
	ОсталосьПосещений = 0;
	ВидАттракционаАбонемента = Неопределено;
	
	Если АктивныеПосещения.Следующий() Тогда
		ОсталосьПосещений = АктивныеПосещения.КоличествоПосещенийОстаток;
		ВидАттракционаАбонемента = АктивныеПосещения.ВидАттракциона;
	КонецЕсли;
	
	Если ОсталосьПосещений < 1 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В билете не осталось посещений!";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Основание";
		Сообщение.Сообщить();
	КонецЕсли;
	
	ВидАттракционаДокумента = ВидАттракциона(Аттракцион);
	Если НЕ ЗначениеЗаполнено(ВидАттракционаАбонемента) 
		И ВидАттракционаДокумента <> ВидАттракционаАбонемента Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В билете не осталось посещений!";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Основание";
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// регистр АктивныеПосещения
	Движения.АктивныеПосещения.Записывать = Истина;
	Движение = Движения.АктивныеПосещения.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Основание = Основание;
	Движение.ВидАттракциона = ВидАттракционаАбонемента;
	Движение.КоличествоПосещений = 1;
	
	// регистр ПосещениеАттракционов
	Движения.ПосещениеАттракционов.Записывать = Истина;
	ДвижениеПосещениеАттракционов = Движения.ПосещениеАттракционов.Добавить();
	ДвижениеПосещениеАттракционов.Период = Дата;
	ДвижениеПосещениеАттракционов.Аттракцион = Аттракцион;
	ДвижениеПосещениеАттракционов.Клиент = КлиентПоОснованию();
	ДвижениеПосещениеАттракционов.Количество = 1;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Вид аттракциона.
// 
// Параметры:
//  Аттракцион - СправочникСсылка.Аттракционы - Аттракцион
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Вид аттракциона
Функция ВидАттракциона(Аттракцион)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Аттракционы.ВидАттракциона
		|ИЗ
		|	Справочник.Аттракционы КАК Аттракционы
		|ГДЕ
		|	Аттракционы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Аттракцион);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции

// Активные посещения.
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Активные посещения:
//  *ВидАттракциона - СправочникСсылка.ВидыАттракционов
//  *КоличествоПосещенийОстаток - Число
//
Функция АктивныеПосещения()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	АктивныеПосещенияОстатки.ВидАттракциона,
		|	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток
		|ИЗ
		|	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) КАК АктивныеПосещенияОстатки";
		
	Запрос.УстановитьПараметр("Основание", Основание);
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка;
	
КонецФункции

// Клиент по основанию.
// 
// Возвращаемое значение:
//  СправочникСсылка.Клиенты - Клиент по основанию
Функция КлиентПоОснованию()
		
	Выборка = ВыборкаПродажаБилетаКлиент();
		
	Возврат Выборка.Клиент;
	
КонецФункции

// Выборка продажа билета клиент.
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Выборка продажа билета клиент:
//  *Клиент - СправочникСсылка.Клиенты - Клиент
Функция ВыборкаПродажаБилетаКлиент()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПродажаБилета.Клиент
		|ИЗ
		|	Документ.ПродажаБилета КАК ПродажаБилета
		|ГДЕ
		|	ПродажаБилета.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
